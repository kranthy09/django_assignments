export LD_LIBRARY_PATH=/usr/local/lib

source dj_venv/bin/activate

cd django/django_submissions/django_assignment_005/

cd django/optimization/

cd django/db_optimization/db_optimization

cd django/django_submissions/django_assignment_004/

cd django/django_submissions/django_assignment_003/

cd django/dj_next_lvl/topapp/

cd django/django_submissions/django_assignment_002/




param movies_list: [
        {
            "movie_id": "movie_1",
            "name": "Movie 1",
            "actors": [
                {
                    "actor_id": "actor_1",
                    "role": "hero",
                    "is_debut_movie": False
                }
            ],
            "box_office_collection_in_crores": "12.3",
            "release_date": "2020-3-3",
            "director_name": "Director 1"
        }
    ]


SELECT website_blog.id AS blog_id,
        website_entry.id AS entry_id,
        website_entry_authors.author_id AS author_id
 FROM website_blog
    LEFT OUTER JOIN website_entry
        ON (website_blog.id = website_entry.blog_id)
            LEFT OUTER JOIN website_entry_authors
                ON (website_entry.id = website_entry_authors.entry_id)
WHERE website_entry_authors.author_id IS NULL LIMIT 21;


SELECT website_blog.id AS blog_id,
        website_entry.id AS entry_id,
        website_author.id AS author_id,
        website_author.name AS author_name
 FROM website_blog 
    LEFT OUTER JOIN website_entry
        ON (website_blog.id = website_entry.blog_id)
            LEFT OUTER JOIN website_entry_authors
                ON (website_entry.id = website_entry_authors.entry_id)
                    LEFT OUTER JOIN website_author
                        ON (website_entry_authors.author_id = website_author.id)
                            WHERE website_author.name IS NULL LIMIT 21;


import sys

import os

import django

sys.path.append('/home/ec-2/')

os.environ['DJANGO_SETTINGS_MODULE'] = 'mysite.settings'

django.setup()

Movie.objects.filter(cast__actor__name__endswith=Charan")

Director.objects.filter(movie__realease_date__year=2000)



def get_movies_by_given_movie_names(movie_names):
    for movie_name in movie_names:
        movie_objects_related_to_movie_name = Movie.objects.filter(name=movie_name)
        
        query_each_movie = {}
        for movie_obj in movie_objects_related_to_movie_name:
            query_each_movie = {
                    'movie_id' : movie_obj.movie_id,
                    'name' : movie_obj.name
            }
            
            cast_crew = Cast.objects.filter(movie__movie_id=movie_obj.movie_id)
            value = []
            for each_cast in cast_crew:
                value.append({
                        'actor' : {
                                    'name' : Actor.objects.get(pk=each_cast.actor_id).name,
                                    'actor_id' : each_cast.actor_id
                                },
                        'role' : each_cast.role,
                        'is_debut_movie' : each_cast.is_debut_movie
                })
            
            query_each_movie['cast'] = value
            
            query_each_movie["box_office_collection_in_crores"]: movie_obj.box_office_collection_in_crores
            query_each_movie["release_date"] : str(movie_obj.release_date)
            query_each_movie["director_name"]: movie_obj.director.name
            
            #rating
            
            try:
                rating = Rating.objects.get(rating__movie_id=movie_obj.movie_id)
            except:
                rating_1 = 0
                rating_2 = 0
                rating_3 = 0
                rating_4 = 0
                rating_5 = 0
            else:
                rating_1 = movie_obj.rating.rating_one_count
                rating_2 = movie_obj.rating.rating_two_count
                rating_3 = movie_obj.rating.rating_three_count
                rating_4 = movie_obj.rating.rating_four_count
                rating_5 = movie_obj.rating.rating_five_count
            
            average_rating = avg_rating_function(rating_1, rating_2, rating_3,
                                                 rating_4, rating_5)
            
            total_number_of_ratings = rating_1 + rating_2 + rating_3 + 
                                      rating_4 + rating_5
            
            query_each_movie['average_rating'] = average_rating
            query_each_movie['total_number_of_ratings'] = total_number_of_ratings
    
    return query_each_movie
            

find /home/ -name "rough.txt"
    --> find rough.txt file in /home/ path


            
            


actors_list = [ 
{ 
     "actor_id": "actor_1", 
     "name": "Actor 1", 
     "gender": "MALE" 
 }, 
 { 
 "actor_id": "actor_2", 
 "name": "Actor 2", 
 "gender": "FEMALE" 
 } 
 ]                                                                                                      

movies_list = [ 
 { 
 "movie_id": "movie_1", 
 "name": "Movie 1", 
 "actors": [ 
 { 
 "actor_id": "actor_1", 
 "role": "hero", 
 "is_debut_movie": False 
 }, 
 { 
 "actor_id": 'actor_2', 
 'role': "heroine", 
 "is_debut_movie":False 
 } 
 ], 
 "box_office_collection_in_crores": "12.3", 
 "release_date": "2020-3-3", 
 "director_name": "Director 1" 
 } 
 ]                                                                                                      

directors_list= [ 
         "Director 1" 
            ]                                                                                          

movie_rating_list = [ 
 { 
 "movie_id": "movie_1", 
 "rating_one_count": 4, 
 "rating_two_count": 4, 
 "rating_three_count": 4, 
 "rating_four_count": 4, 
 "rating_five_count": 4 
 } 
 ]                                                          
